name: CI/CD

on:
  push:
    branches: [main]
  pull_request:

jobs:
  build-test-push:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_DB: mspr_db
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - name: Install dependencies
        run: |
          pip install -r requirements.txt
          pip install pytest
      - name: Set environment variables
        run: |
          echo "DATABASE_URL=postgresql://postgres:postgres@localhost:5432/mspr_db" >> $GITHUB_ENV
      - name: Init test database
        run: |
          psql -h localhost -U postgres -d mspr_db -c "CREATE TABLE IF NOT EXISTS covid19_daily (id SERIAL PRIMARY KEY, total_cases INT, total_deaths INT, total_recovered INT);"
        env:
          PGPASSWORD: postgres
      - name: Insert test data
        run: |
          psql -h localhost -U postgres -d mspr_db -c "INSERT INTO covid19_daily (total_cases, total_deaths, total_recovered) VALUES (100, 0, 80), (200, 1, 150);"
        env:
          PGPASSWORD: postgres
      - name: Start dashboard (optionnel)
        run: |
          nohup streamlit run scripts/dashboard.py --server.port 8501 &
        shell: bash
      - name: Run unit tests
        env:
          DATABASE_URL: ${{ env.DATABASE_URL }}
        run: pytest tests/
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push ml-pipeline
        run: |
          docker build -f Dockerfile.ml_pipeline -t ${{ secrets.DOCKERHUB_USERNAME }}/mspr6.1-ml-pipeline:latest .
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/mspr6.1-ml-pipeline:latest
      - name: Build and push api
        run: |
          docker build -f Dockerfile.api -t ${{ secrets.DOCKERHUB_USERNAME }}/mspr6.1-api:latest .
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/mspr6.1-api:latest
      - name: Build and push dashboard
        run: |
          docker build -f Dockerfile.dashboard -t ${{ secrets.DOCKERHUB_USERNAME }}/mspr6.1-dashboard:latest .
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/mspr6.1-dashboard:latest